{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/credit-party.ts"],"sourcesContent":["export interface CreditParty {\n  id: string;\n  name: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  totalCreditAmount: number;\n  remainingBalance: number;\n  interestRate?: number;\n  startDate: string;\n  dueDate?: string;\n  paymentFrequency: 'daily' | 'weekly' | 'monthly';\n  notes?: string;\n  isActive: boolean;\n}\n\nexport interface Payment {\n  id: string;\n  creditPartyId: string;\n  amount: number;\n  date: string;\n  type: 'payment' | 'additional_credit';\n  notes?: string;\n  paymentMethod?: string;\n}\n\nexport const PAYMENT_METHODS = [\n  'Cash',\n  'Bank Transfer',\n  'UPI',\n  'Cheque',\n  'Digital Wallet',\n  'Other'\n] as const;\n\nexport const PAYMENT_FREQUENCIES = [\n  'daily',\n  'weekly',\n  'monthly'\n] as const;\n\nexport type PaymentMethod = typeof PAYMENT_METHODS[number];\nexport type PaymentFrequency = typeof PAYMENT_FREQUENCIES[number];\n\nexport const formatCurrency = (amount: number): string => {\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR'\n  }).format(amount);\n};\n\nexport const formatDate = (dateString: string): string => {\n  return new Date(dateString).toLocaleDateString('en-IN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n\nexport const formatDateTime = (dateString: string): string => {\n  return new Date(dateString).toLocaleDateString('en-IN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\nexport const calculateDaysBetween = (startDate: string, endDate: string): number => {\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  const diffTime = Math.abs(end.getTime() - start.getTime());\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n};\n\nexport const calculateDailyPayment = (\n  totalAmount: number,\n  days: number,\n  interestRate?: number\n): number => {\n  let amount = totalAmount / days;\n  if (interestRate && interestRate > 0) {\n    const dailyInterest = (totalAmount * interestRate) / 100 / 365;\n    amount += dailyInterest;\n  }\n  return Math.round(amount * 100) / 100;\n};\n\nexport const getOverdueStatus = (creditParty: CreditParty): {\n  isOverdue: boolean;\n  daysOverdue: number;\n  amountDue: number;\n} => {\n  if (!creditParty.dueDate || creditParty.remainingBalance <= 0) {\n    return { isOverdue: false, daysOverdue: 0, amountDue: 0 };\n  }\n\n  const today = new Date();\n  const dueDate = new Date(creditParty.dueDate);\n  \n  if (today > dueDate) {\n    const daysOverdue = calculateDaysBetween(creditParty.dueDate, today.toISOString());\n    return { isOverdue: true, daysOverdue, amountDue: creditParty.remainingBalance };\n  }\n\n  return { isOverdue: false, daysOverdue: 0, amountDue: 0 };\n};\n"],"names":[],"mappings":";;;;;;;;;;AA0BO,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,sBAAsB;IACjC;IACA;IACA;CACD;AAKM,MAAM,iBAAiB,CAAC;IAC7B,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU;IACZ,GAAG,MAAM,CAAC;AACZ;AAEO,MAAM,aAAa,CAAC;IACzB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;QACtD,MAAM;QACN,OAAO;QACP,KAAK;IACP;AACF;AAEO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;QACtD,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;IACV;AACF;AAEO,MAAM,uBAAuB,CAAC,WAAmB;IACtD,MAAM,QAAQ,IAAI,KAAK;IACvB,MAAM,MAAM,IAAI,KAAK;IACrB,MAAM,WAAW,KAAK,GAAG,CAAC,IAAI,OAAO,KAAK,MAAM,OAAO;IACvD,OAAO,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,KAAK,KAAK,EAAE;AAClD;AAEO,MAAM,wBAAwB,CACnC,aACA,MACA;IAEA,IAAI,SAAS,cAAc;IAC3B,IAAI,gBAAgB,eAAe,GAAG;QACpC,MAAM,gBAAgB,AAAC,cAAc,eAAgB,MAAM;QAC3D,UAAU;IACZ;IACA,OAAO,KAAK,KAAK,CAAC,SAAS,OAAO;AACpC;AAEO,MAAM,mBAAmB,CAAC;IAK/B,IAAI,CAAC,YAAY,OAAO,IAAI,YAAY,gBAAgB,IAAI,GAAG;QAC7D,OAAO;YAAE,WAAW;YAAO,aAAa;YAAG,WAAW;QAAE;IAC1D;IAEA,MAAM,QAAQ,IAAI;IAClB,MAAM,UAAU,IAAI,KAAK,YAAY,OAAO;IAE5C,IAAI,QAAQ,SAAS;QACnB,MAAM,cAAc,qBAAqB,YAAY,OAAO,EAAE,MAAM,WAAW;QAC/E,OAAO;YAAE,WAAW;YAAM;YAAa,WAAW,YAAY,gBAAgB;QAAC;IACjF;IAEA,OAAO;QAAE,WAAW;QAAO,aAAa;QAAG,WAAW;IAAE;AAC1D","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/CreditPartyDashboard.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useCreditParties } from '@/context/CreditPartyContext';\nimport { formatCurrency } from '@/lib/credit-party';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\n\nexport const CreditPartyDashboard: React.FC = () => {\n  const { \n    creditParties, \n    getTotalOutstanding, \n    getTotalPaid, \n    getOverdueParties \n  } = useCreditParties();\n\n  const totalOutstanding = getTotalOutstanding();\n  const totalPaid = getTotalPaid();\n  const overdueParties = getOverdueParties();\n  const activeParties = creditParties.filter(party => party.isActive);\n  const completedParties = creditParties.filter(party => !party.isActive);\n\n  return (\n    <div className=\"w-full max-w-6xl mx-auto p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-foreground mb-2\">Credit Party Dashboard</h1>\n        <p className=\"text-muted-foreground\">Manage your daily credit payments and track outstanding balances</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <Card className=\"border-2\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground uppercase tracking-wide\">\n              Total Active Parties\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-primary\">\n              {activeParties.length}\n            </div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Active credit relationships\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-2\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground uppercase tracking-wide\">\n              Total Outstanding\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-600\">\n              {formatCurrency(totalOutstanding)}\n            </div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Amount to be paid\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-2\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground uppercase tracking-wide\">\n              Total Paid\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">\n              {formatCurrency(totalPaid)}\n            </div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Total payments made\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-2\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground uppercase tracking-wide\">\n              Overdue Parties\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-orange-600\">\n              {overdueParties.length}\n            </div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Need immediate attention\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {overdueParties.length > 0 && (\n        <Card className=\"border-2 border-orange-200 mb-8\">\n          <CardHeader>\n            <CardTitle className=\"text-lg font-semibold text-orange-800\">\n              Overdue Credit Parties\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {overdueParties.map(party => (\n                <div key={party.id} className=\"flex items-center justify-between p-3 bg-orange-50 rounded-lg\">\n                  <div>\n                    <p className=\"font-medium text-orange-900\">{party.name}</p>\n                    <p className=\"text-sm text-orange-700\">\n                      Outstanding: {formatCurrency(party.remainingBalance)}\n                    </p>\n                  </div>\n                  <Badge variant=\"destructive\" className=\"bg-orange-500\">\n                    Overdue\n                  </Badge>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {creditParties.length === 0 && (\n        <Card className=\"border-2 border-dashed\">\n          <CardContent className=\"flex flex-col items-center justify-center py-12\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-semibold text-muted-foreground mb-2\">\n                No credit parties yet\n              </h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Add your first credit party to start tracking daily payments\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 744, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 776, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 810, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1059, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/CreditPartyForm.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useCreditParties } from '@/context/CreditPartyContext';\nimport { PAYMENT_FREQUENCIES } from '@/lib/credit-party';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\n\nconst creditPartySchema = z.object({\n  name: z.string().min(2, 'Name must be at least 2 characters'),\n  phone: z.string().optional(),\n  email: z.string().email('Invalid email address').optional().or(z.literal('')),\n  address: z.string().optional(),\n  totalCreditAmount: z.number().positive('Credit amount must be positive'),\n  interestRate: z.number().min(0).max(100).optional(),\n  startDate: z.string().min(1, 'Start date is required'),\n  dueDate: z.string().optional(),\n  paymentFrequency: z.enum(['daily', 'weekly', 'monthly']),\n  notes: z.string().optional(),\n});\n\ntype CreditPartyFormData = z.infer<typeof creditPartySchema>;\n\nexport const CreditPartyForm: React.FC = () => {\n  const { addCreditParty } = useCreditParties();\n  \n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { errors, isSubmitting }\n  } = useForm<CreditPartyFormData>({\n    resolver: zodResolver(creditPartySchema),\n    defaultValues: {\n      name: '',\n      phone: '',\n      email: '',\n      address: '',\n      totalCreditAmount: 0,\n      interestRate: 0,\n      startDate: new Date().toISOString().split('T')[0],\n      dueDate: '',\n      paymentFrequency: 'daily',\n      notes: '',\n    }\n  });\n\n  const onSubmit = async (data: CreditPartyFormData) => {\n    try {\n      addCreditParty({\n        ...data,\n        isActive: true,\n        dueDate: data.dueDate || undefined,\n        interestRate: data.interestRate || undefined,\n      });\n      reset();\n    } catch (error) {\n      console.error('Error adding credit party:', error);\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto p-6\">\n      <Card className=\"border-2\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold\">Add New Credit Party</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Party Name *</Label>\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter party name\"\n                  {...register('name')}\n                  className=\"w-full\"\n                />\n                {errors.name && (\n                  <p className=\"text-sm text-red-600\">{errors.name.message}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"phone\">Phone Number</Label>\n                <Input\n                  id=\"phone\"\n                  type=\"tel\"\n                  placeholder=\"Enter phone number\"\n                  {...register('phone')}\n                  className=\"w-full\"\n                />\n                {errors.phone && (\n                  <p className=\"text-sm text-red-600\">{errors.phone.message}</p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter email address\"\n                  {...register('email')}\n                  className=\"w-full\"\n                />\n                {errors.email && (\n                  <p className=\"text-sm text-red-600\">{errors.email.message}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"totalCreditAmount\">Total Credit Amount *</Label>\n                <Input\n                  id=\"totalCreditAmount\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  placeholder=\"0.00\"\n                  {...register('totalCreditAmount', { valueAsNumber: true })}\n                  className=\"w-full\"\n                />\n                {errors.totalCreditAmount && (\n                  <p className=\"text-sm text-red-600\">{errors.totalCreditAmount.message}</p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"interestRate\">Interest Rate (%)</Label>\n                <Input\n                  id=\"interestRate\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  min=\"0\"\n                  max=\"100\"\n                  placeholder=\"0\"\n                  {...register('interestRate', { valueAsNumber: true })}\n                  className=\"w-full\"\n                />\n                {errors.interestRate && (\n                  <p className=\"text-sm text-red-600\">{errors.interestRate.message}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"startDate\">Start Date *</Label>\n                <Input\n                  id=\"startDate\"\n                  type=\"date\"\n                  {...register('startDate')}\n                  className=\"w-full\"\n                />\n                {errors.startDate && (\n                  <p className=\"text-sm text-red-600\">{errors.startDate.message}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"dueDate\">Due Date</Label>\n                <Input\n                  id=\"dueDate\"\n                  type=\"date\"\n                  {...register('dueDate')}\n                  className=\"w-full\"\n                />\n                {errors.dueDate && (\n                  <p className=\"text-sm text-red-600\">{errors.dueDate.message}</p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"paymentFrequency\">Payment Frequency *</Label>\n              <Select onValueChange={(value) => setValue('paymentFrequency', value as any)}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select payment frequency\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {PAYMENT_FREQUENCIES.map((frequency) => (\n                    <SelectItem key={frequency} value={frequency}>\n                      {frequency.charAt(0).toUpperCase() + frequency.slice(1)}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              {errors.paymentFrequency && (\n                <p className=\"text-sm text-red-600\">{errors.paymentFrequency.message}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"address\">Address</Label>\n              <Input\n                id=\"address\"\n                placeholder=\"Enter address\"\n                {...register('address')}\n                className=\"w-full\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"notes\">Notes</Label>\n              <Textarea\n                id=\"notes\"\n                placeholder=\"Add any additional notes...\"\n                {...register('notes')}\n                className=\"w-full\"\n                rows={3}\n              />\n            </div>\n\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"w-full\"\n            >\n              {isSubmitting ? 'Adding Credit Party...' : 'Add Credit Party'}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1642, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 1687, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/CreditPartyList.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useCreditParties } from '@/context/CreditPartyContext';\nimport { formatCurrency, formatDate, getOverdueStatus } from '@/lib/credit-party';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\n\nexport const CreditPartyList: React.FC = () => {\n  const { creditParties, updateCreditParty } = useCreditParties();\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n\n  const filteredParties = creditParties.filter(party => {\n    if (filterStatus === 'all') return true;\n    if (filterStatus === 'active') return party.isActive && party.remainingBalance > 0;\n    if (filterStatus === 'completed') return !party.isActive || party.remainingBalance === 0;\n    if (filterStatus === 'overdue') {\n      const { isOverdue } = getOverdueStatus(party);\n      return isOverdue;\n    }\n    return true;\n  });\n\n  const togglePartyStatus = (id: string, currentStatus: boolean) => {\n    updateCreditParty(id, { isActive: !currentStatus });\n  };\n\n  const getProgressPercentage = (total: number, remaining: number): number => {\n    if (total === 0) return 0;\n    return Math.round(((total - remaining) / total) * 100);\n  };\n\n  if (creditParties.length === 0) {\n    return (\n      <div className=\"w-full max-w-6xl mx-auto p-6\">\n        <Card className=\"border-2 border-dashed\">\n          <CardContent className=\"flex flex-col items-center justify-center py-12\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-semibold text-muted-foreground mb-2\">\n                No credit parties found\n              </h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Add your first credit party to start tracking payments\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full max-w-6xl mx-auto p-6\">\n      <Card className=\"border-2\">\n        <CardHeader>\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n            <CardTitle className=\"text-xl font-semibold\">Credit Parties</CardTitle>\n            <div className=\"flex gap-2\">\n              <Button\n                variant={filterStatus === 'all' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setFilterStatus('all')}\n              >\n                All\n              </Button>\n              <Button\n                variant={filterStatus === 'active' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setFilterStatus('active')}\n              >\n                Active\n              </Button>\n              <Button\n                variant={filterStatus === 'overdue' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setFilterStatus('overdue')}\n              >\n                Overdue\n              </Button>\n              <Button\n                variant={filterStatus === 'completed' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setFilterStatus('completed')}\n              >\n                Completed\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {filteredParties.map((party) => {\n              const progress = getProgressPercentage(\n                party.totalCreditAmount,\n                party.remainingBalance\n              );\n              const { isOverdue, daysOverdue } = getOverdueStatus(party);\n              \n              return (\n                <div\n                  key={party.id}\n                  className=\"border rounded-lg p-4 hover:bg-muted/50 transition-colors\"\n                >\n                  <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-4\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h3 className=\"text-lg font-semibold\">{party.name}</h3>\n                        <div className=\"flex items-center gap-2\">\n                          {isOverdue && (\n                            <Badge variant=\"destructive\">\n                              Overdue {daysOverdue} days\n                            </Badge>\n                          )}\n                          <Badge variant={party.isActive ? 'default' : 'secondary'}>\n                            {party.isActive ? 'Active' : 'Completed'}\n                          </Badge>\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                        <div>\n                          <p className=\"text-muted-foreground\">Total Credit</p>\n                          <p className=\"font-medium\">{formatCurrency(party.totalCreditAmount)}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-muted-foreground\">Remaining</p>\n                          <p className={`font-medium ${party.remainingBalance > 0 ? 'text-red-600' : 'text-green-600'}`}>\n                            {formatCurrency(party.remainingBalance)}\n                          </p>\n                        </div>\n                        <div>\n                          <p className=\"text-muted-foreground\">Payment Frequency</p>\n                          <p className=\"font-medium capitalize\">{party.paymentFrequency}</p>\n                        </div>\n                        {party.dueDate && (\n                          <div>\n                            <p className=\"text-muted-foreground\">Due Date</p>\n                            <p className=\"font-medium\">{formatDate(party.dueDate)}</p>\n                          </div>\n                        )}\n                      </div>\n\n                      {party.phone && (\n                        <p className=\"text-sm text-muted-foreground mt-2\">\n                          Phone: {party.phone}\n                        </p>\n                      )}\n\n                      <div className=\"mt-3\">\n                        <div className=\"flex justify-between text-sm mb-1\">\n                          <span>Progress</span>\n                          <span>{progress}%</span>\n                        </div>\n                        <Progress value={progress} className=\"h-2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"flex flex-col sm:flex-row gap-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => togglePartyStatus(party.id, party.isActive)}\n                      >\n                        {party.isActive ? 'Mark Complete' : 'Reactivate'}\n                      </Button>\n                    </div>\n                  </div>\n\n                  {party.notes && (\n                    <div className=\"mt-3 pt-3 border-t\">\n                      <p className=\"text-sm text-muted-foreground\">\n                        <strong>Notes:</strong> {party.notes}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n\n          {filteredParties.length === 0 && creditParties.length > 0 && (\n            <div className=\"text-center py-8\">\n              <p className=\"text-muted-foreground\">\n                No credit parties match the selected filter\n              </p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2193, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DailyPaymentForm.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useCreditParties } from '@/context/CreditPartyContext';\nimport { formatCurrency, formatDate, PAYMENT_METHODS } from '@/lib/credit-party';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\n\nconst paymentSchema = z.object({\n  creditPartyId: z.string().min(1, 'Please select a credit party'),\n  amount: z.number().positive('Amount must be positive'),\n  type: z.enum(['payment', 'additional_credit']),\n  paymentMethod: z.string().min(1, 'Payment method is required'),\n  date: z.string().min(1, 'Date is required'),\n  notes: z.string().optional(),\n});\n\ntype PaymentFormData = z.infer<typeof paymentSchema>;\n\nexport const DailyPaymentForm: React.FC = () => {\n  const { creditParties, addPayment } = useCreditParties();\n  const [selectedParty, setSelectedParty] = useState<string>('');\n\n  const activeParties = creditParties.filter(party => party.isActive && party.remainingBalance > 0);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    watch,\n    formState: { errors, isSubmitting }\n  } = useForm<PaymentFormData>({\n    resolver: zodResolver(paymentSchema),\n    defaultValues: {\n      creditPartyId: '',\n      amount: 0,\n      type: 'payment',\n      paymentMethod: 'Cash',\n      date: new Date().toISOString().split('T')[0],\n      notes: '',\n    }\n  });\n\n  const watchedPartyId = watch('creditPartyId');\n  const watchedType = watch('type');\n\n  const selectedPartyData = activeParties.find(party => party.id === watchedPartyId);\n\n  const onSubmit = async (data: PaymentFormData) => {\n    try {\n      addPayment(data);\n      reset({\n        creditPartyId: '',\n        amount: 0,\n        type: 'payment',\n        paymentMethod: 'Cash',\n        date: new Date().toISOString().split('T')[0],\n        notes: '',\n      });\n      setSelectedParty('');\n    } catch (error) {\n      console.error('Error adding payment:', error);\n    }\n  };\n\n  const handlePartySelect = (partyId: string) => {\n    setSelectedParty(partyId);\n    setValue('creditPartyId', partyId);\n    \n    // Auto-fill suggested daily payment amount\n    const party = activeParties.find(p => p.id === partyId);\n    if (party) {\n      const daysSinceStart = Math.ceil(\n        (new Date().getTime() - new Date(party.startDate).getTime()) / (1000 * 60 * 60 * 24)\n      );\n      const dailyAmount = party.totalCreditAmount / Math.max(30, daysSinceStart);\n      setValue('amount', Math.min(party.remainingBalance, Math.round(dailyAmount * 100) / 100));\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto p-6\">\n      <Card className=\"border-2\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold\">Record Daily Payment</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"creditPartyId\">Select Credit Party *</Label>\n              <Select \n                value={selectedParty} \n                onValueChange={handlePartySelect}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Choose a credit party\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {activeParties.map((party) => (\n                    <SelectItem key={party.id} value={party.id}>\n                      {party.name} - Outstanding: {formatCurrency(party.remainingBalance)}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              {errors.creditPartyId && (\n                <p className=\"text-sm text-red-600\">{errors.creditPartyId.message}</p>\n              )}\n            </div>\n\n            {selectedPartyData && (\n              <div className=\"p-4 bg-muted rounded-lg\">\n                <h4 className=\"font-medium mb-2\">Party Details</h4>\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div>\n                    <span className=\"text-muted-foreground\">Total Credit:</span>\n                    <p className=\"font-medium\">{formatCurrency(selectedPartyData.totalCreditAmount)}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-muted-foreground\">Remaining:</span>\n                    <p className=\"font-medium text-red-600\">{formatCurrency(selectedPartyData.remainingBalance)}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-muted-foreground\">Frequency:</span>\n                    <p className=\"font-medium capitalize\">{selectedPartyData.paymentFrequency}</p>\n                  </div>\n                  {selectedPartyData.dueDate && (\n                    <div>\n                      <span className=\"text-muted-foreground\">Due Date:</span>\n                      <p className=\"font-medium\">{formatDate(selectedPartyData.dueDate)}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"amount\">Amount *</Label>\n                <Input\n                  id=\"amount\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  placeholder=\"0.00\"\n                  {...register('amount', { valueAsNumber: true })}\n                  className=\"w-full\"\n                />\n                {errors.amount && (\n                  <p className=\"text-sm text-red-600\">{errors.amount.message}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"date\">Payment Date *</Label>\n                <Input\n                  id=\"date\"\n                  type=\"date\"\n                  {...register('date')}\n                  className=\"w-full\"\n                />\n                {errors.date && (\n                  <p className=\"text-sm text-red-600\">{errors.date.message}</p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label>Transaction Type</Label>\n                <Select \n                  value={watchedType} \n                  onValueChange={(value) => setValue('type', value as 'payment' | 'additional_credit')}\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"payment\">Payment Made</SelectItem>\n                    <SelectItem value=\"additional_credit\">Additional Credit</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"paymentMethod\">Payment Method *</Label>\n                <Select \n                  onValueChange={(value) => setValue('paymentMethod', value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select payment method\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {PAYMENT_METHODS.map((method) => (\n                      <SelectItem key={method} value={method}>\n                        {method}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                {errors.paymentMethod && (\n                  <p className=\"text-sm text-red-600\">{errors.paymentMethod.message}</p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"notes\">Notes</Label>\n              <Textarea\n                id=\"notes\"\n                placeholder=\"Add payment notes...\"\n                {...register('notes')}\n                className=\"w-full\"\n                rows={3}\n              />\n            </div>\n\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting || activeParties.length === 0}\n              className=\"w-full\"\n            >\n              {isSubmitting ? 'Recording Payment...' : 'Record Payment'}\n            </Button>\n\n            {activeParties.length === 0 && (\n              <p className=\"text-sm text-muted-foreground text-center\">\n                No active credit parties available. Please add a credit party first.\n              </p>\n            )}\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2795, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/PaymentHistory.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useCreditParties } from '@/context/CreditPartyContext';\nimport { formatCurrency, formatDateTime, PAYMENT_METHODS } from '@/lib/credit-party';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\nexport const PaymentHistory: React.FC = () => {\n  const { payments, creditParties, removePayment, getPaymentsByPartyId } = useCreditParties();\n  const [filterParty, setFilterParty] = useState<string>('all');\n  const [filterType, setFilterType] = useState<string>('all');\n\n  const filteredPayments = payments.filter(payment => {\n    const partyMatch = filterParty === 'all' || payment.creditPartyId === filterParty;\n    const typeMatch = filterType === 'all' || payment.type === filterType;\n    return partyMatch && typeMatch;\n  });\n\n  const getPartyName = (partyId: string): string => {\n    const party = creditParties.find(p => p.id === partyId);\n    return party?.name || 'Unknown Party';\n  };\n\n  const handleDeletePayment = (id: string) => {\n    if (window.confirm('Are you sure you want to delete this payment record?')) {\n      removePayment(id);\n    }\n  };\n\n  if (payments.length === 0) {\n    return (\n      <div className=\"w-full max-w-6xl mx-auto p-6\">\n        <Card className=\"border-2 border-dashed\">\n          <CardContent className=\"flex flex-col items-center justify-center py-12\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-semibold text-muted-foreground mb-2\">\n                No payment records yet\n              </h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Record your first payment to start tracking payment history\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full max-w-6xl mx-auto p-6\">\n      <Card className=\"border-2\">\n        <CardHeader>\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n            <CardTitle className=\"text-xl font-semibold\">Payment History</CardTitle>\n            <div className=\"flex flex-col sm:flex-row gap-2\">\n              <Select value={filterType} onValueChange={setFilterType}>\n                <SelectTrigger className=\"w-full sm:w-[140px]\">\n                  <SelectValue placeholder=\"Filter by type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Types</SelectItem>\n                  <SelectItem value=\"payment\">Payments</SelectItem>\n                  <SelectItem value=\"additional_credit\">Additional Credit</SelectItem>\n                </SelectContent>\n              </Select>\n              <Select value={filterParty} onValueChange={setFilterParty}>\n                <SelectTrigger className=\"w-full sm:w-[180px]\">\n                  <SelectValue placeholder=\"Filter by party\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Parties</SelectItem>\n                  {creditParties.map((party) => (\n                    <SelectItem key={party.id} value={party.id}>\n                      {party.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {filteredPayments.map((payment) => (\n              <div\n                key={payment.id}\n                className=\"flex flex-col sm:flex-row sm:items-center justify-between p-4 border rounded-lg hover:bg-muted/50 transition-colors\"\n              >\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"font-medium\">{getPartyName(payment.creditPartyId)}</h4>\n                    <Badge\n                      variant={payment.type === 'payment' ? 'default' : 'secondary'}\n                      className={\n                        payment.type === 'payment'\n                          ? 'bg-green-100 text-green-800'\n                          : 'bg-orange-100 text-orange-800'\n                      }\n                    >\n                      {payment.type === 'payment' ? 'Payment' : 'Additional Credit'}\n                    </Badge>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                    <div>\n                      <span className=\"text-muted-foreground\">Amount:</span>\n                      <p className={`font-medium ${payment.type === 'payment' ? 'text-green-600' : 'text-orange-600'}`}>\n                        {payment.type === 'payment' ? '-' : '+'}{formatCurrency(payment.amount)}\n                      </p>\n                    </div>\n                    <div>\n                      <span className=\"text-muted-foreground\">Date:</span>\n                      <p className=\"font-medium\">{formatDateTime(payment.date)}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-muted-foreground\">Method:</span>\n                      <p className=\"font-medium\">{payment.paymentMethod}</p>\n                    </div>\n                  </div>\n\n                  {payment.notes && (\n                    <p className=\"text-sm text-muted-foreground mt-2\">\n                      <strong>Notes:</strong> {payment.notes}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"flex items-center gap-2 mt-3 sm:mt-0\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleDeletePayment(payment.id)}\n                    className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n                  >\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {filteredPayments.length === 0 && payments.length > 0 && (\n            <div className=\"text-center py-8\">\n              <p className=\"text-muted-foreground\">\n                No payments match the selected filters\n              </p>\n            </div>\n          )}\n\n          <div className=\"mt-6 pt-4 border-t\">\n            <p className=\"text-sm text-muted-foreground text-center\">\n              Showing {filteredPayments.length} of {payments.length} payment records\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}