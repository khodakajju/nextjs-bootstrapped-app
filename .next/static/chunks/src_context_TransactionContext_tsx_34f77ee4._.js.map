{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/TransactionContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { Transaction } from '@/lib/transaction';\n\ninterface TransactionContextType {\n  transactions: Transaction[];\n  addTransaction: (transaction: Omit<Transaction, 'id'>) => void;\n  removeTransaction: (id: string) => void;\n  getTotalCredits: () => number;\n  getTotalDebits: () => number;\n  getBalance: () => number;\n}\n\nconst TransactionContext = createContext<TransactionContextType | undefined>(undefined);\n\ninterface TransactionProviderProps {\n  children: ReactNode;\n}\n\nexport const TransactionProvider: React.FC<TransactionProviderProps> = ({ children }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n  // Load transactions from localStorage on mount\n  useEffect(() => {\n    try {\n      const savedTransactions = localStorage.getItem('transactions');\n      if (savedTransactions) {\n        const parsedTransactions = JSON.parse(savedTransactions);\n        setTransactions(parsedTransactions);\n      }\n    } catch (error) {\n      console.error('Error loading transactions from localStorage:', error);\n    }\n  }, []);\n\n  // Save transactions to localStorage whenever transactions change\n  useEffect(() => {\n    try {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    } catch (error) {\n      console.error('Error saving transactions to localStorage:', error);\n    }\n  }, [transactions]);\n\n  const addTransaction = (transactionData: Omit<Transaction, 'id'>) => {\n    try {\n      const newTransaction: Transaction = {\n        ...transactionData,\n        id: Date.now().toString() + Math.random().toString(36).substr(2, 9)\n      };\n      setTransactions(prev => [newTransaction, ...prev]);\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n    }\n  };\n\n  const removeTransaction = (id: string) => {\n    try {\n      setTransactions(prev => prev.filter(transaction => transaction.id !== id));\n    } catch (error) {\n      console.error('Error removing transaction:', error);\n    }\n  };\n\n  const getTotalCredits = (): number => {\n    return transactions\n      .filter(transaction => transaction.type === 'credit')\n      .reduce((total, transaction) => total + transaction.amount, 0);\n  };\n\n  const getTotalDebits = (): number => {\n    return transactions\n      .filter(transaction => transaction.type === 'debit')\n      .reduce((total, transaction) => total + transaction.amount, 0);\n  };\n\n  const getBalance = (): number => {\n    return getTotalCredits() - getTotalDebits();\n  };\n\n  const value: TransactionContextType = {\n    transactions,\n    addTransaction,\n    removeTransaction,\n    getTotalCredits,\n    getTotalDebits,\n    getBalance\n  };\n\n  return (\n    <TransactionContext.Provider value={value}>\n      {children}\n    </TransactionContext.Provider>\n  );\n};\n\nexport const useTransactions = (): TransactionContextType => {\n  const context = useContext(TransactionContext);\n  if (context === undefined) {\n    throw new Error('useTransactions must be used within a TransactionProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAcA,MAAM,mCAAqB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAsC;AAMtE,MAAM,sBAA0D,CAAC,EAAE,QAAQ,EAAE;;IAClF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAElE,+CAA+C;IAC/C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR,IAAI;gBACF,MAAM,oBAAoB,aAAa,OAAO,CAAC;gBAC/C,IAAI,mBAAmB;oBACrB,MAAM,qBAAqB,KAAK,KAAK,CAAC;oBACtC,gBAAgB;gBAClB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,iDAAiD;YACjE;QACF;wCAAG,EAAE;IAEL,iEAAiE;IACjE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR,IAAI;gBACF,aAAa,OAAO,CAAC,gBAAgB,KAAK,SAAS,CAAC;YACtD,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8CAA8C;YAC9D;QACF;wCAAG;QAAC;KAAa;IAEjB,MAAM,iBAAiB,CAAC;QACtB,IAAI;YACF,MAAM,iBAA8B;gBAClC,GAAG,eAAe;gBAClB,IAAI,KAAK,GAAG,GAAG,QAAQ,KAAK,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;YACnE;YACA,gBAAgB,CAAA,OAAQ;oBAAC;uBAAmB;iBAAK;QACnD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,MAAM,oBAAoB,CAAC;QACzB,IAAI;YACF,gBAAgB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,cAAe,YAAY,EAAE,KAAK;QACxE,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;IAEA,MAAM,kBAAkB;QACtB,OAAO,aACJ,MAAM,CAAC,CAAA,cAAe,YAAY,IAAI,KAAK,UAC3C,MAAM,CAAC,CAAC,OAAO,cAAgB,QAAQ,YAAY,MAAM,EAAE;IAChE;IAEA,MAAM,iBAAiB;QACrB,OAAO,aACJ,MAAM,CAAC,CAAA,cAAe,YAAY,IAAI,KAAK,SAC3C,MAAM,CAAC,CAAC,OAAO,cAAgB,QAAQ,YAAY,MAAM,EAAE;IAChE;IAEA,MAAM,aAAa;QACjB,OAAO,oBAAoB;IAC7B;IAEA,MAAM,QAAgC;QACpC;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,mBAAmB,QAAQ;QAAC,OAAO;kBACjC;;;;;;AAGP;GA3Ea;KAAA;AA6EN,MAAM,kBAAkB;;IAC7B,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}}]
}